{"version":3,"sources":["Contacts/Contacts.jsx","App.js","index.js"],"names":["Contacts","title","data","map","el","name","id","App","state","contacts","handleChange","e","value","target","setState","addContact","preventDefault","prev","nextId","this","onSubmit","type","pattern","required","onChange","onClick","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yQAeeA,MAbf,YAAoC,IAAhBC,EAAe,EAAfA,MAAOC,EAAQ,EAARA,KACzB,OACE,qCACE,6BAAKD,IACL,6BACGC,EAAKC,KAAI,SAAAC,GAAE,OACV,6BAAiBA,EAAGC,MAAXD,EAAGE,a,gBCJDC,E,4MACnBC,MAAQ,CACNC,SAAU,GACVJ,KAAM,I,EAGRK,aAAe,SAAAC,GACb,IAAMC,EAAQD,EAAEE,OAAOD,MACjBP,EAAOM,EAAEE,OAAOR,KAEtB,EAAKS,SAAL,eACGT,EAAOO,K,EAGZG,WAAa,SAAAJ,GACXA,EAAEK,iBACF,EAAKF,UAAS,SAAAG,GAAI,MAAK,CACrBR,SAAS,GAAD,mBACHQ,EAAKR,UADF,CAEN,CACEJ,KAAMY,EAAKZ,KACXC,GAAIY,SAGRb,KAAM,Q,4CAGV,WACE,MAA2Bc,KAAKX,MAAxBH,EAAR,EAAQA,KAAMI,EAAd,EAAcA,SACd,OACE,qCACE,2CACA,sCACA,uBAAMW,SAAUD,KAAKJ,WAArB,UACE,uBACEH,MAAOP,EACPgB,KAAK,OACLhB,KAAK,OACLiB,QAAQ,yHACRrB,MAAM,kcACNsB,UAAQ,EACRC,SAAUL,KAAKT,eAEjB,wBAAQW,KAAK,SAASI,QAASN,KAAKJ,WAApC,4BAKF,cAAC,EAAD,CAAUd,MAAM,WAAWC,KAAMO,W,GAhDRiB,aCCjCC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.9df8f73c.chunk.js","sourcesContent":["import React from 'react';\n\nfunction Contacts({ title, data }) {\n  return (\n    <>\n      <h2>{title}</h2>\n      <ul>\n        {data.map(el => (\n          <li key={el.id}>{el.name}</li>\n        ))}\n      </ul>\n    </>\n  );\n}\n\nexport default Contacts;\n","import React, { Component } from 'react';\nimport Contacts from './Contacts/Contacts';\nimport nextId from 'react-id-generator';\n\nexport default class App extends Component {\n  state = {\n    contacts: [],\n    name: '',\n  };\n\n  handleChange = e => {\n    const value = e.target.value;\n    const name = e.target.name;\n\n    this.setState({\n      [name]: value,\n    });\n  };\n  addContact = e => {\n    e.preventDefault();\n    this.setState(prev => ({\n      contacts: [\n        ...prev.contacts,\n        {\n          name: prev.name,\n          id: nextId(),\n        },\n      ],\n      name: '',\n    }));\n  };\n  render() {\n    const { name, contacts } = this.state;\n    return (\n      <>\n        <h2>Phonebook</h2>\n        <h3>Name</h3>\n        <form onSubmit={this.addContact}>\n          <input\n            value={name}\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n            onChange={this.handleChange}\n          />\n          <button type=\"button\" onClick={this.addContact}>\n            Add contact\n          </button>\n        </form>\n\n        <Contacts title=\"Contacts\" data={contacts} />\n      </>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}