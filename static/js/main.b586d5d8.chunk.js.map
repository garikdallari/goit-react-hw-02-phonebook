{"version":3,"sources":["Components/Utils/Title/Title.styled.jsx","Components/Utils/Title/Title.jsx","Components/Utils/Button/Button.styled.jsx","Components/Utils/Button/Button.jsx","Components/ContactForm/ContactForm.styled.jsx","Components/Utils/Input/Input.styled.jsx","Components/Utils/Input/Input.jsx","Components/ContactForm/ContactForm.jsx","Components/ContactItem/ContactItem.styled.jsx","Components/ContactItem/ContactItem.jsx","Components/ContactList/Contacts.styled.jsx","Components/ContactList/ContactList.jsx","Components/Filter/Filter.jsx","Components/Utils/Container/Container.styled.jsx","Components/Utils/Container/Container.jsx","App.js","index.js"],"names":["SecondaryTitle","styled","h2","props","size","Title","text","Btn","button","Button","Form","form","Field","input","Input","ContactForm","state","name","number","handleChange","e","value","currentTarget","setState","handleSubmit","preventDefault","onSubmit","this","type","pattern","title","required","onChange","Component","Name","p","Number","ContactItem","contact","List","ul","Item","li","ContactList","contacts","onDeleteContact","map","onClick","id","Filter","Wrapper","div","Container","children","App","filter","target","addContact","data","newContact","nextId","find","toLowerCase","alert","prev","deleteContact","contactId","handleFilterChange","filterByName","includes","filteredContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b586d5d8.chunk.js","sourcesContent":["import styled from '@emotion/styled';\n\nexport const SecondaryTitle = styled.h2`\n  font-size: ${props => props.size}px;\n`;\n","import React from 'react';\nimport { SecondaryTitle } from './Title.styled';\n\nfunction Title({ text, size }) {\n  return <SecondaryTitle size={size}>{text}</SecondaryTitle>;\n}\n\nexport default Title;\n","import styled from '@emotion/styled';\n\nexport const Btn = styled.button``;\n","import React from 'react';\nimport { Btn } from './Button.styled';\n\nfunction Button({ text }) {\n  return <Btn>{text}</Btn>;\n}\n\nexport default Button;\n","import styled from '@emotion/styled';\n\nexport const Form = styled.form``;\n","import styled from '@emotion/styled';\n\nexport const Field = styled.input``;\n","import React from 'react';\nimport { Field } from './Input.styled';\n\nfunction Input() {\n  return <Field />;\n}\n\nexport default Input;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Title from '../Utils/Title/Title';\nimport Button from '../Utils/Button/Button';\nimport { Form } from './ContactForm.styled';\nimport Input from '../Utils/Input/Input';\n\nexport default class ContactForm extends Component {\n  state = {\n    name: '',\n    number: '',\n  };\n\n  handleChange = e => {\n    const value = e.currentTarget.value;\n    const name = e.currentTarget.name;\n\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.onSubmit(this.state);\n    this.setState({\n      name: '',\n      number: '',\n    });\n  };\n\n  render() {\n    const { name, number } = this.state;\n    return (\n      <Form onSubmit={this.handleSubmit}>\n        <Title size={18} text=\"Name\" />\n        <Input\n          value={name}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n          onChange={this.handleChange}\n        />\n        <Title size={18} text=\"Number\" />\n        <Input\n          value={number}\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n          onChange={this.handleChange}\n        />\n        <Button text=\"Add to contacts\" />\n      </Form>\n    );\n  }\n}\nContactForm.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }).isRequired,\n  ).isRequired,\n  onSubmit: PropTypes.func.isRequired,\n};\n","import styled from '@emotion/styled';\n\nexport const Name = styled.p``;\nexport const Number = styled.p``;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Name, Number } from './ContactItem.styled';\n\nfunction ContactItem({ contact }) {\n  return (\n    <>\n      <Name>{contact.name}</Name>\n      <Number>{contact.number}</Number>\n    </>\n  );\n}\nContactItem.propTypes = {\n  contact: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n  }).isRequired,\n};\nexport default ContactItem;\n","import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n  list-style: none;\n`;\nexport const Item = styled.li``;\n","import React from 'react';\nimport ContactItem from '../ContactItem/ContactItem';\nimport PropTypes from 'prop-types';\nimport Button from '../Utils/Button/Button';\nimport { List, Item } from './Contacts.styled';\n\nfunction ContactList({ contacts, onDeleteContact }) {\n  return (\n    <>\n      <List>\n        {contacts.map(contact => (\n          <Item key={contact.id}>\n            <ContactItem contact={contact} />\n            <Button\n              text=\"Delete\"\n              type=\"button\"\n              onClick={() => onDeleteContact(contact.id)}\n            />\n          </Item>\n        ))}\n      </List>\n    </>\n  );\n}\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }).isRequired,\n  ).isRequired,\n  onDeleteContact: PropTypes.func.isRequired,\n};\n\nexport default ContactList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Title from '../Utils/Title/Title';\nimport Input from '../Utils/Input/Input';\n\nfunction Filter({ value, onChange }) {\n  return (\n    <>\n      <Title size={16} text=\"Find contacts in contact list...\" />\n      <Input type=\"text\" name=\"filter\" value={value} onChange={onChange} />\n    </>\n  );\n}\n\nFilter.propTypes = {\n  title: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default Filter;\n","import styled from '@emotion/styled';\n\nexport const Wrapper = styled.div`\n  width: 100%;\n  height: 100vh;\n  padding: 15px;\n  margin-left: auto;\n  margin-right: auto;\n  text-align: center;\n`;\n","import React from 'react';\nimport { Wrapper } from './Container.styled';\n\nfunction Container({ children }) {\n  return <Wrapper>{children}</Wrapper>;\n}\n\nexport default Container;\n","import React, { Component } from 'react';\nimport ContactForm from './Components/ContactForm/ContactForm';\nimport ContactList from './Components/ContactList/ContactList';\nimport Filter from './Components/Filter/Filter';\nimport nextId from 'react-id-generator';\nimport Container from './Components/Utils/Container/Container';\nimport Title from './Components/Utils/Title/Title';\n\nexport default class App extends Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n  };\n\n  handleChange = e => {\n    const value = e.target.value;\n    const name = e.target.name;\n\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  addContact = data => {\n    const { name, number } = data;\n    const { contacts } = this.state;\n    const id = nextId();\n    const newContact = {\n      name,\n      id,\n      number,\n    };\n    const checkOnSameContact = contacts.find(\n      contact => contact.name.toLowerCase() === newContact.name.toLowerCase(),\n    );\n\n    if (checkOnSameContact) {\n      alert(`${newContact.name} is already in contacts`);\n      return;\n    } else {\n      this.setState(prev => ({\n        contacts: [...prev.contacts, newContact],\n      }));\n    }\n  };\n  deleteContact = contactId => {\n    this.setState(prev => ({\n      contacts: prev.contacts.filter(contact => contactId !== contact.id),\n    }));\n  };\n\n  handleFilterChange = e => {\n    const target = e.target.value;\n    this.setState({\n      filter: target,\n    });\n  };\n\n  filterByName = () => {\n    const { contacts, filter } = this.state;\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase()),\n    );\n  };\n\n  render() {\n    const { contacts, filter } = this.state;\n\n    const filteredContacts = this.filterByName();\n    return (\n      <Container>\n        <Title size={24} text=\"Phonebook\" />\n        <ContactForm onSubmit={this.addContact} contacts={contacts} />\n\n        <Title size={20} text=\"Contacts\" />\n        <Filter value={filter} onChange={this.handleFilterChange} />\n\n        <ContactList\n          onDeleteContact={this.deleteContact}\n          contacts={filteredContacts}\n        />\n      </Container>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}