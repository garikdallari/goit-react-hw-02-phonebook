{"version":3,"sources":["Components/ContactForm/ContactForm.jsx","Components/ContactList/ContactList.jsx","Components/Filter/Filter.jsx","App.js","index.js"],"names":["ContactForm","state","name","number","handleChange","e","value","currentTarget","setState","handleSubmit","preventDefault","props","onSubmit","this","type","pattern","title","required","onChange","Component","ContactList","contacts","map","el","id","Filter","App","filter","target","addContact","data","prev","nextId","handleFilterChange","filterByName","contact","toLowerCase","includes","filteredContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yQAEqBA,E,4MACnBC,MAAQ,CACNC,KAAM,GACNC,OAAQ,I,EAGVC,aAAe,SAAAC,GACb,IAAMC,EAAQD,EAAEE,cAAcD,MACxBJ,EAAOG,EAAEE,cAAcL,KAE7B,EAAKM,SAAL,eACGN,EAAOI,K,EAIZG,aAAe,SAAAJ,GACbA,EAAEK,iBACF,EAAKC,MAAMC,SAAS,EAAKX,OACzB,EAAKO,SAAS,CACZN,KAAM,GACNC,OAAQ,M,4CAIZ,WACE,MAAyBU,KAAKZ,MAAtBC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,OACd,OACE,uBAAMS,SAAUC,KAAKJ,aAArB,UACE,sCACA,uBACEH,MAAOJ,EACPY,KAAK,OACLZ,KAAK,OACLa,QAAQ,yHACRC,MAAM,kcACNC,UAAQ,EACRC,SAAUL,KAAKT,eAEjB,wCACA,uBACEE,MAAOH,EACPW,KAAK,MACLZ,KAAK,SACLa,QAAQ,yFACRC,MAAM,giBACNC,UAAQ,EACRC,SAAUL,KAAKT,eAEjB,wBAAQU,KAAK,SAAb,gC,GAhDiCK,aCc1BC,MAdf,YAAoC,IAAbC,EAAY,EAAZA,SACrB,OACE,mCACE,6BACGA,EAASC,KAAI,SAAAC,GAAE,OACd,+BACGA,EAAGrB,KADN,KACcqB,EAAGpB,SADRoB,EAAGC,YCIPC,MATf,YAAsC,IAApBnB,EAAmB,EAAnBA,MAAOY,EAAY,EAAZA,SACvB,OACE,qCACE,uDACA,uBAAOJ,KAAK,OAAOZ,KAAK,SAASI,MAAOA,EAAOY,SAAUA,Q,gBCA1CQ,E,4MACnBzB,MAAQ,CACNoB,SAAU,CACR,CAAEG,GAAI,OAAQtB,KAAM,gBAAiBC,OAAQ,aAC7C,CAAEqB,GAAI,OAAQtB,KAAM,iBAAkBC,OAAQ,aAC9C,CAAEqB,GAAI,OAAQtB,KAAM,gBAAiBC,OAAQ,aAC7C,CAAEqB,GAAI,OAAQtB,KAAM,iBAAkBC,OAAQ,cAEhDwB,OAAQ,I,EAGVvB,aAAe,SAAAC,GACb,IAAMC,EAAQD,EAAEuB,OAAOtB,MACjBJ,EAAOG,EAAEuB,OAAO1B,KAEtB,EAAKM,SAAL,eACGN,EAAOI,K,EAGZuB,WAAa,SAAAC,GACX,EAAKtB,UAAS,SAAAuB,GAAI,MAAK,CACrBV,SAAS,GAAD,mBACHU,EAAKV,UADF,CAEN,CACEnB,KAAM4B,EAAK5B,KACXsB,GAAIQ,MACJ7B,OAAQ2B,EAAK3B,e,EAMrB8B,mBAAqB,SAAA5B,GACnB,IAAMuB,EAASvB,EAAEuB,OAAOtB,MACxB,EAAKE,SAAS,CACZmB,OAAQC,K,EAIZM,aAAe,WACb,MAA6B,EAAKjC,MAA1BoB,EAAR,EAAQA,SAAUM,EAAlB,EAAkBA,OAClB,OAAON,EAASM,QAAO,SAAAQ,GAAO,OAC5BA,EAAQjC,KAAKkC,cAAcC,SAASV,EAAOS,mB,4CAI/C,WACE,MAA6BvB,KAAKZ,MAA1BoB,EAAR,EAAQA,SAAUM,EAAlB,EAAkBA,OAEZW,EAAmBzB,KAAKqB,eAC9B,OACE,qCACE,2CACA,cAAC,EAAD,CAAatB,SAAUC,KAAKgB,WAAYR,SAAUA,IAElD,0CACA,cAAC,EAAD,CAAQf,MAAOqB,EAAQT,SAAUL,KAAKoB,qBAEtC,cAAC,EAAD,CAAaZ,SAAUiB,W,GA1DEnB,aCDjCoB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.83425379.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nexport default class ContactForm extends Component {\n  state = {\n    name: '',\n    number: '',\n  };\n\n  handleChange = e => {\n    const value = e.currentTarget.value;\n    const name = e.currentTarget.name;\n\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.onSubmit(this.state);\n    this.setState({\n      name: '',\n      number: '',\n    });\n  };\n\n  render() {\n    const { name, number } = this.state;\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <h3>Name</h3>\n        <input\n          value={name}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n          onChange={this.handleChange}\n        />\n        <h3>Number</h3>\n        <input\n          value={number}\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n          onChange={this.handleChange}\n        />\n        <button type=\"submit\">Add contact</button>\n      </form>\n    );\n  }\n}\n","import React from 'react';\n\nfunction ContactList({ contacts }) {\n  return (\n    <>\n      <ul>\n        {contacts.map(el => (\n          <li key={el.id}>\n            {el.name}: {el.number}\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n}\n\nexport default ContactList;\n","import React from 'react';\n\nfunction Filter({ value, onChange }) {\n  return (\n    <>\n      <h3>Find Contacts by name</h3>\n      <input type=\"text\" name=\"filter\" value={value} onChange={onChange} />\n    </>\n  );\n}\n\nexport default Filter;\n","import React, { Component } from 'react';\nimport ContactForm from './Components/ContactForm/ContactForm';\nimport ContactList from './Components/ContactList/ContactList';\nimport Filter from './Components/Filter/Filter';\nimport nextId from 'react-id-generator';\n\nexport default class App extends Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n  };\n\n  handleChange = e => {\n    const value = e.target.value;\n    const name = e.target.name;\n\n    this.setState({\n      [name]: value,\n    });\n  };\n  addContact = data => {\n    this.setState(prev => ({\n      contacts: [\n        ...prev.contacts,\n        {\n          name: data.name,\n          id: nextId(),\n          number: data.number,\n        },\n      ],\n    }));\n  };\n\n  handleFilterChange = e => {\n    const target = e.target.value;\n    this.setState({\n      filter: target,\n    });\n  };\n\n  filterByName = () => {\n    const { contacts, filter } = this.state;\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase()),\n    );\n  };\n\n  render() {\n    const { contacts, filter } = this.state;\n\n    const filteredContacts = this.filterByName();\n    return (\n      <>\n        <h2>Phonebook</h2>\n        <ContactForm onSubmit={this.addContact} contacts={contacts} />\n\n        <h2>Contacts</h2>\n        <Filter value={filter} onChange={this.handleFilterChange} />\n\n        <ContactList contacts={filteredContacts} />\n      </>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}