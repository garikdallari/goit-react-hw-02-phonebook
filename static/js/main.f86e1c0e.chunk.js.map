{"version":3,"sources":["App.js","index.js"],"names":["App","state","contacts","id","name","number","filter","handleChange","e","value","target","setState","addContact","preventDefault","prev","nextId","filterByName","twoCalls","this","search","contact","Object","keys","some","key","toLowerCase","includes","onSubmit","type","pattern","title","required","onChange","onClick","map","el","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yRAIqBA,E,4MACnBC,MAAQ,CACNC,SAAU,CACR,CAAEC,GAAI,OAAQC,KAAM,gBAAiBC,OAAQ,aAC7C,CAAEF,GAAI,OAAQC,KAAM,iBAAkBC,OAAQ,aAC9C,CAAEF,GAAI,OAAQC,KAAM,gBAAiBC,OAAQ,aAC7C,CAAEF,GAAI,OAAQC,KAAM,iBAAkBC,OAAQ,cAEhDC,OAAQ,GACRF,KAAM,GACNC,OAAQ,I,EAGVE,aAAe,SAAAC,GACb,IAAMC,EAAQD,EAAEE,OAAOD,MACjBL,EAAOI,EAAEE,OAAON,KAEtB,EAAKO,SAAL,eACGP,EAAOK,K,EAGZG,WAAa,SAAAJ,GACXA,EAAEK,iBACF,EAAKF,UAAS,SAAAG,GAAI,MAAK,CACrBZ,SAAS,GAAD,mBACHY,EAAKZ,UADF,CAEN,CACEE,KAAMU,EAAKV,KACXD,GAAIY,MACJV,OAAQS,EAAKT,UAGjBD,KAAM,GACNC,OAAQ,Q,EAIZW,aAAe,WACb,EAAKL,UAAS,SAAAG,GAAI,MAAK,O,EAWzBG,SAAW,SAAAT,GACT,EAAKD,aAAaC,GAClB,EAAKQ,gB,4CAGP,WACE,MAA2CE,KAAKjB,MAAxCG,EAAR,EAAQA,KAAMF,EAAd,EAAcA,SAAUG,EAAxB,EAAwBA,OAAQC,EAAhC,EAAgCA,OAC5Ba,EAASjB,EAASI,QAAO,SAAAc,GAAO,OAClCC,OAAOC,KAAKF,GAASG,MAAK,SAAAC,GAAG,OAC3BJ,EAAQI,GAAKC,cAAcC,SAASpB,EAAOmB,qBAG/C,OACE,qCACE,2CACA,uBAAME,SAAUT,KAAKN,WAArB,UACE,sCACA,uBACEH,MAAOL,EACPwB,KAAK,OACLxB,KAAK,OACLyB,QAAQ,yHACRC,MAAM,kcACNC,UAAQ,EACRC,SAAUd,KAAKX,eAEjB,wCACA,uBACEE,MAAOJ,EACPuB,KAAK,MACLxB,KAAK,SACLyB,QAAQ,yFACRC,MAAM,giBACNC,UAAQ,EACRC,SAAUd,KAAKX,eAGjB,wBAAQqB,KAAK,SAASK,QAASf,KAAKN,WAApC,4BAKF,0CACA,uDACA,uBACEgB,KAAK,OACLxB,KAAK,SACLK,MAAOH,EACP0B,SAAUd,KAAKX,eAGjB,6BACGY,EAAOe,KAAI,SAAAC,GAAE,OACZ,+BACGA,EAAG/B,KADN,KACc+B,EAAG9B,SADR8B,EAAGhC,gB,GAtGSiC,aCCjCC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.f86e1c0e.chunk.js","sourcesContent":["import React, { Component } from 'react';\n// import Contacts from './Contacts/Contacts';\nimport nextId from 'react-id-generator';\n\nexport default class App extends Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n    name: '',\n    number: '',\n  };\n\n  handleChange = e => {\n    const value = e.target.value;\n    const name = e.target.name;\n\n    this.setState({\n      [name]: value,\n    });\n  };\n  addContact = e => {\n    e.preventDefault();\n    this.setState(prev => ({\n      contacts: [\n        ...prev.contacts,\n        {\n          name: prev.name,\n          id: nextId(),\n          number: prev.number,\n        },\n      ],\n      name: '',\n      number: '',\n    }));\n  };\n\n  filterByName = () => {\n    this.setState(prev => ({\n      // contacts: prev.contacts.filter(contact => console.log(Object.values(contact)))\n      // contacts: prev.contacts.filter(item =>\n      //   if (prev.filter === '') {\n      //     return prev.contacts\n      //   }\n      //   return Object.keys(item).some(key => item[key].toLowerCase().includes(prev.filter.toLowerCase()))\n      // })\n    }));\n  };\n\n  twoCalls = e => {\n    this.handleChange(e);\n    this.filterByName();\n  };\n\n  render() {\n    const { name, contacts, number, filter } = this.state;\n    let search = contacts.filter(contact =>\n      Object.keys(contact).some(key =>\n        contact[key].toLowerCase().includes(filter.toLowerCase()),\n      ),\n    );\n    return (\n      <>\n        <h2>Phonebook</h2>\n        <form onSubmit={this.addContact}>\n          <h3>Name</h3>\n          <input\n            value={name}\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n            onChange={this.handleChange}\n          />\n          <h3>Number</h3>\n          <input\n            value={number}\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n            onChange={this.handleChange}\n          />\n\n          <button type=\"button\" onClick={this.addContact}>\n            Add contact\n          </button>\n        </form>\n\n        <h2>Contacts</h2>\n        <h3>Find Contacts by name</h3>\n        <input\n          type=\"text\"\n          name=\"filter\"\n          value={filter}\n          onChange={this.handleChange}\n        />\n\n        <ul>\n          {search.map(el => (\n            <li key={el.id}>\n              {el.name}: {el.number}\n            </li>\n          ))}\n        </ul>\n\n        {/* <Contacts  data={contacts}/> */}\n      </>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}